@using Microsoft.Extensions.Logging

@inject ILogger<PureDropdown> Log

<PureText Type="Typo.H1" Id="dropdowns">Dropdowns</PureText>
<div class="mb-10">
    <PureText Type="Typo.H3">Button dropdown</PureText>
    <div class="flex items-baseline">
        <PureDropdown Items="Items" OnItemSelected="ItemSelected">Settings</PureDropdown>
        <p class="dark:text-gray-200 ml-4 mb-4">
            <strong>Selected: </strong> @MenuItemClicked
        </p>
    </div>

    <MkCode Text="@Markup" Language="@MkCode.Razor" Caption="Example" Css="my-4"/>
</div>

@code {
    public string MenuItemClicked { get; set; } = "Select a menu item";

    public List<PureDropdown.PureMenuItem> Items { get; set; } = new List<PureDropdown.PureMenuItem>();

    protected override void OnInitialized()
    {
        Items.Add(new PureDropdown.PureMenuItem { Text = "Menu item 1" });
        Items.Add(new PureDropdown.PureMenuItem { Text = "Menu item 2" });
        Items.Add(new PureDropdown.PureMenuItem { Text = "Menu item 3" });
        Items.Add(new PureDropdown.PureMenuItem { Text = "Menu item 4" });
    }

    protected void ItemSelected(PureDropdown.PureMenuItem item)
    {
        MenuItemClicked = item.Text;
    }

    private string Markup = @"<PureDropdown Items=""Items"">Settings</PureDropdown>

@code {
    private List<PureDropdown.PureMenuItem> Items = new List<PureDropdown.PureMenuItem>
    {
        new PureDropdown.PureMenuItem { Text = ""Menu item 1"" }},
        new PureDropdown.PureMenuItem { Text = ""Menu item 2"" }}
    };
}
";

}