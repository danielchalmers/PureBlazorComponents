@inherits PureComponent
@namespace Pure.Blazor.Components

<li class="@ApplyStyle(PureStyles.LeftNav.Container)">
    <NavLink href="@Url"
             Match="NavLinkMatch.All"
             ActiveClass="@ApplyStyle(PureStyles.LeftNav.HeaderActive)"
             class="@ApplyStyle(PureStyles.LeftNav.Header)">
        @ChildContent
    </NavLink>
    @if (Nested)
    {
        <ul class="@ApplyStyle(PureStyles.LeftNav.MenuItemContainer)">
            @RenderNestedItem(("components/alerts", "Alert", ApplyStyle(PureStyles.LeftNav.MenuItem)))
            @RenderNestedItem(("components/buttons", "Button", ApplyStyle(PureStyles.LeftNav.MenuItem)))
            @RenderNestedItem(("components/cards", "Card", ApplyStyle(PureStyles.LeftNav.MenuItem)))
            @RenderNestedItem(("components/dropdowns", "Dropdown", ApplyStyle(PureStyles.LeftNav.MenuItem)))
            @RenderNestedItem(("components/forms", "Forms", ApplyStyle(PureStyles.LeftNav.MenuItem)))
            @RenderNestedItem(("components/tabs", "Tabs", ApplyStyle(PureStyles.LeftNav.MenuItem)))
            @RenderNestedItem(("dev", "Dev", ApplyStyle(PureStyles.LeftNav.MenuItem)))
        </ul>
    }
</li>

@code {

    private RenderFragment<(string, string, string)> RenderNestedItem = data => __builder =>
    {
        <a href="@data.Item1"><li class="@data.Item3">@data.Item2</li></a>
    };
    [Parameter]
    public bool Active { get; set; }

    [Parameter]
    public string? Url { get; set; }

    [Parameter]
    public bool Nested { get; set; }
}
