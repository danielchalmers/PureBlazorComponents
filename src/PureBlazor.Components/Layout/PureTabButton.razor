<a @onclick="OnClick" class="@(InternalCss) sm:px-6 py-1 text-sm w-1/2 sm:w-auto justify-center sm:justify-start inline-flex items-center">
    <!-- todo: icon -->
    @Title
</a>
@code {
    [Parameter]
    public string Title { get; set; } = string.Empty;

    [Parameter]
    public bool IsActive { get; set; }

    [Parameter]
    public TabVariant Variant { get; set; }

    [Parameter]
    public EventCallback<MouseEventArgs> OnClick { get; set; }

    private string InternalCss { get; set; } = string.Empty;

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        InternalCss = BuildCss();
    }

    public string BuildCss()
    {
        var builder = TailwindBuilder.New().SetFontSize(PureSize.Medium);

        switch (Variant)
        {
            case TabVariant.Default when IsActive:
                builder.AddClasses("border-b-2 border-primary-500 cursor-pointer");
                break;
            case TabVariant.Default when !IsActive:
                builder.AddClasses("border-b-2 border-secondary-300 cursor-pointer");
                break;
            case TabVariant.Outline when IsActive:
                builder.AddClasses("border rounded-t-sm border-neutral-200 border-b-white bg-white cursor-default hover:bg-gray-50 relative top-px");

                break;
            case TabVariant.Outline when !IsActive:
                builder.AddClasses("border rounded-t-sm border-transparent cursor-default hover:bg-gray-50 relative top-px");
                break;
        }
        return builder.Build();
    }
}
