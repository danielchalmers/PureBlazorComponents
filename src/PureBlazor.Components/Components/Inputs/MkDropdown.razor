@using Microsoft.Extensions.Logging
@using PureBlazor.Components.Utilities
@namespace PureBlazor.Components
@inject ILogger<MkDropdown> Log
@inject IElementUtils Utils

<div class="relative inline-block text-left group">
    <div>
        <MkButton>
            @ChildContent
            <svg class="-mr-1 ml-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
            </svg>
        </MkButton>
    </div>

    <div class="origin-top-right absolute @(Position == MkDropdownPosition.Right ? "right-0" : "left-0") mt-2 w-56 rounded-md shadow-lg bg-white dark:bg-gray-800 ring-1 ring-black ring-opacity-5 focus:outline-none invisible group-focus-within:visible group-active:visible z-10"
         role="menu"
         aria-orientation="vertical"
         aria-labelledby="menu-button"
         tabindex="-1">
        <div class="py-1 dark:bg-gray-800 flex flex-col" role="none">
            @foreach (var item in Items)
            {
                <button @onclick="async e => { await OnItemClick(e, item); }" class="text-gray-700 dark:text-white dark:bg-gray-800 dark:hover:bg-gray-700 block px-4 py-2 text-sm grow text-left" role="menuitem" tabindex="-1" id="menu-item-0">@item.Text</button>
            }
        </div>
    </div>
</div>

@code {
    /// <summary>
    /// Inner content for the dropdown button.
    /// </summary>
    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    /// <summary>
    /// Position (side) to open the dropdown menu.
    /// </summary>
    [Parameter]
    public MkDropdownPosition Position { get; set; } = MkDropdownPosition.Left;

    /// <summary>
    /// Dropdown menu items.
    /// </summary>
    [Parameter]
    public List<MkMenuItem> Items { get; set; } = new();

    /// <summary>
    /// Returns the menu item selected.
    /// </summary>
    [Parameter]
    public EventCallback<MkMenuItem> OnItemSelected { get; set; }

    public async Task OnItemClick(MouseEventArgs args, MkMenuItem item)
    {
        await Utils.Blur();

        await OnItemSelected.InvokeAsync(item);
    }

    // todo: move to it's own file and update references
    public class MkMenuItem
    {
        /// <summary>
        /// The text to display on the menu item.
        /// </summary>
        public string? Text { get; set; }
    }

    public enum MkDropdownPosition
    {
        Left,
        Right
    }
}
