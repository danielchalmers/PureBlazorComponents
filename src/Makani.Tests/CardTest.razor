@using Makani.Themes
@code {
    [Fact]
    public void DefaultCard_ShouldRender_When_No_ImageUrl_Is_Provided()
    {
        using var ctx = new TestContext();
        ctx.Services.AddSingleton<ButtonTheme>();

        var sut = ctx.Render(@<MkCard Title="Card Title">
        The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.
    </MkCard>);
        sut.MarkupMatches(@<div class:ignore>
        <div class="px-6 py-4">
            <MkText Type="Typo.H2">Card Title</MkText>
            <p class="text-gray-700 text-base">
                The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.
            </p>
        </div>
    </div>);
    }

    [Fact]
    public void LeftAlignedCard_ShouldRender_When_No_Alignment_Parameter_Left_Is_Provided()
    {
        using var ctx = new TestContext();
        ctx.Services.AddSingleton<ButtonTheme>();

        var sut = ctx.Render(@<MkCard Title="Card Title" Alignment="@MkCardAlignment.Left" ImageUrl="https://picsum.photos/400/300">
        The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.
        <MkCardFooter>
            <MkButton Color="MkColor.Primary">Default</MkButton>
        </MkCardFooter>
    </MkCard>);

        sut.MarkupMatches(@<div class:ignore>
        <div class="h-48 lg:h-auto lg:w-48 flex-none bg-cover text-center overflow-hidden" style="background-image: url('https://picsum.photos/400/300')"></div>
        <div class="p-4 flex flex-col justify-between leading-normal">
            <div>
                <MkText Type="Typo.H2">Card Title</MkText>
                <p class="text-gray-700 text-base">
                    The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.
                </p>
                <div class="pt-4">
                    <button class:ignore>Default</button>
                </div>
                <p></p>
            </div>
        </div>
    </div>
    );
    }

    [Fact]
    public void TopAlignedCard_ShouldRender_When_No_Alignment_Parameter_Top_Is_Provided()
    {
        using var ctx = new TestContext();
        ctx.Services.AddSingleton<ButtonTheme>();

        var sut = ctx.Render(
    @<MkCard Title="Card Title" Alignment="@MkCardAlignment.Top" ImageUrl="https://picsum.photos/400/300">
        The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.
        <MkCardFooter>
            <MkButton Color="MkColor.Primary">Default</MkButton>
        </MkCardFooter>
    </MkCard>
        );
        sut.MarkupMatches(
    @<div class:ignore>
        <img src="https://picsum.photos/400/300">
        <div class="px-6 py-4">
            <MkText Type="Typo.H2">Card Title</MkText>
            <p class="text-gray-700 text-base">
                The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.The quick brown fox jumps over the lazy dog.
            </p>
            <div class="pt-4">
                <button class:ignore>Default</button>
            </div>
            <p></p>
        </div>
    </div>
    );
    }
}